<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>服务器 on Fish blog ø</title>
    <link>http://blog.innoweb.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
    <description>Recent content in 服务器 on Fish blog ø</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2008 - 2014, Steve Francia; all rights reserved.</copyright>
    <lastBuildDate>Fri, 31 Jan 2020 22:00:26 +0800</lastBuildDate>
    
	<atom:link href="http://blog.innoweb.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go校验层go-validator</title>
      <link>http://blog.innoweb.cn/post/go%E6%A0%A1%E9%AA%8C%E5%B1%82go-validator/</link>
      <pubDate>Fri, 31 Jan 2020 22:00:26 +0800</pubDate>
      
      <guid>http://blog.innoweb.cn/post/go%E6%A0%A1%E9%AA%8C%E5%B1%82go-validator/</guid>
      <description>最近在使用iris框架开发应用的时候，框架本身没有提供优秀的校验层，于是找到了一个第三方库go-validator来搭建校验层。 安装 Go get 获取依赖。 1 go get gopkg.in/validator.v2 Import the package into your own code. 1 2 3 import ( &amp;#34;gopkg.in/validator.v2&amp;#34; ) 使用 定义校验规则 自定义你的校验规则，同时可以使用匿名继承的方式定义结构体。 1 2 3 4 5 6 7 8 9 10 type LoginValidator</description>
    </item>
    
    <item>
      <title>Go处理token</title>
      <link>http://blog.innoweb.cn/post/go%E5%A4%84%E7%90%86token/</link>
      <pubDate>Fri, 31 Jan 2020 21:34:13 +0800</pubDate>
      
      <guid>http://blog.innoweb.cn/post/go%E5%A4%84%E7%90%86token/</guid>
      <description>搭建网站时我们经常使用JWT做用户鉴权，在golang中我们🉑️以通过jwt-go的第三方库来为我们实现。 常见的处理流程： 从request获取tokenstring，可能是通过cookie携带，也可能是从lacalstorage读取并写入请求头。 将tokenstring转化为未解</description>
    </item>
    
  </channel>
</rss>